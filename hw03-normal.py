
import math


# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1


def fibonacci(n, m):
    fib = [1, 1]
    i = 0
    while i <= m:
        item = fib[i] + fib[i + 1]
        fib.append(item)
        i += 1
    else:
        return fib[(n - 1):m]


print(fibonacci(1, 5))
print(fibonacci(1, 10))
print(fibonacci(3, 10))

# Задача-2:
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort()


def sort_to_max(origin_list):
    for i in range(len(origin_list)):
        for j in range(len(origin_list) - 1, i, -1):
            if origin_list[j] <= origin_list[j - 1]:
                origin_list[j], origin_list[j - 1] = origin_list[j - 1], origin_list[j]
    return origin_list


print(sort_to_max([2, 10, -12, 2.5, 4, 20, -11, 345, -456, 32, 2324, 4, 4, 0, 678]))

# Задача-3:
# Напишите собственную реализацию стандартной функции filter.
# Разумеется, внутри нельзя использовать саму функцию filter.

# Задача-4:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4).
# Определить, будут ли они вершинами параллелограмма.


def parallgr(x1, y1, x2, y2, x3, y3, x4, y4):
    # Проверка признаков параллелограмма
    # №1: противоположные стороны должны быть равны
    a1a2 = math.sqrt((x2 - x1)**2 + (y2 - y1)**2)
    a3a4 = math.sqrt((x4 - x3)**2 + (y4 - y3)**2)
    a1a3 = math.sqrt((x3 - x1)**2 + (y3 - y1)**2)
    a2a4 = math.sqrt((x4 - x2)**2 + (y4 - y2)**2)
    if a1a2 == a3a4 and a1a3 == a2a4:
        print('Противоположные стороны равны')
        i = 1
    else:
        i = 0
    # #2: диагонали точкой пересечения делятся пополам
    o14x = (x4 + x1)/2
    o23x = (x3 + x2)/2
    o14y = (y4 + y1)/2
    o23y = (y3 + y2)/2
    if o14x == o23x and o14y == o23y:
        print('Диагонали делятся пополам')
        j = 1
    else:
        j = 0
    if i == 1 and j == 1:
        return 'Фигура является параллелограммом'
    else:
        return 'Фигура не параллелограмм'


print(parallgr(0, 0, 1, 2, 3, 0, 4, 2))
print(parallgr(1, 2, 3, 4, 5, 6, 7, 7))

